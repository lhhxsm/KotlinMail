if (isUserModule.toBoolean()) {
  apply plugin: 'com.android.library'
} else {
  apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
  compileSdkVersion compile_sdk_version
  defaultConfig {
    minSdkVersion min_sdk_version
    targetSdkVersion target_sdk_version
    versionCode 1
    versionName "1.0"

    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [moduleName: project.getName()]
      }
    }

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  packagingOptions {
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/DEPENDENCIES.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/notice.txt'
    exclude 'META-INF/license.txt'
    exclude 'META-INF/dependencies.txt'
    exclude 'META-INF/LGPL2.1'
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'META-INF/rxjava.properties'
  }
  sourceSets {
    main {
      if (isUserModule.toBoolean()) {
        manifest.srcFile 'src/main/release/AndroidManifest.xml'
      } else {
        manifest.srcFile 'src/main/debug/AndroidManifest.xml'
      }
    }
  }

}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  testImplementation "junit:junit:${junit}"
  androidTestImplementation "com.android.support.test:runner:${runner}"
  androidTestImplementation "com.android.support.test.espresso:espresso-core:${espresso_core}"

  annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
  annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
  annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
  api project(':Provider')
}
